
Modules based on Lua: Version 8.7.20  2023-03-16 11:43 -05:00
    by Robert McLay mclay@tacc.utexas.edu

module [options] sub-command [args ...]

Help sub-commands:
------------------
  help                              prints this message
  help                module [...]  print help message from module(s)

Loading/Unloading sub-commands:
-------------------------------
  load | add          module [...]  load module(s)
  try-load | try-add  module [...]  Add module(s), do not complain if not
                                    found
  del | unload        module [...]  Remove module(s), do not complain if not
                                    found
  swap | sw | switch  m1 m2         unload m1 and load m2
  purge                             unload all modules
  refresh                           reload aliases from current list of
                                    modules.
  update                            reload all currently loaded modules.

Listing / Searching sub-commands:
---------------------------------
  list                              List loaded modules
  list                s1 s2 ...     List loaded modules that match the
                                    pattern
  avail | av                        List available modules
  avail | av          string        List available modules that contain
                                    "string".
  category | cat                    List all categories
  category | cat      s1 s2 ...     List all categories that match the
                                    pattern and display their modules
  overview | ov                     List all available modules by short
                                    names with number of versions
  overview | ov       string        List available modules by short names
                                    with number of versions that contain
                                    "string"
  spider                            List all possible modules
  spider              module        List all possible version of that module
                                    file
  spider              string        List all module that contain the
                                    "string".
  spider              name/version  Detailed information about that version
                                    of the module.
  whatis              module        Print whatis information about module
  keyword | key       string        Search all name and whatis that contain
                                    "string".

Searching with Lmod:
--------------------
  All searching (spider, list, avail, keyword) support regular expressions:
  

  -r spider           '^p'          Finds all the modules that start with
                                    `p' or `P'
  -r spider           mpi           Finds all modules that have "mpi" in
                                    their name.
  -r spider           'mpi$         Finds all modules that end with "mpi" in
                                    their name.

Handling a collection of modules:
--------------------------------
  save | s                          Save the current list of modules to a
                                    user defined "default" collection.
  save | s            name          Save the current list of modules to
                                    "name" collection.
  reset                             The same as "restore system"
  restore | r                       Restore modules from the user's
                                    "default" or system default.
  restore | r         name          Restore modules from "name" collection.
  restore             system        Restore module state to system defaults.
  savelist                          List of saved collections.
  describe | mcc      name          Describe the contents of a module
                                    collection.
  disable             name          Disable (i.e. remove) a collection.

Deprecated commands:
--------------------
  getdefault          [name]        load name collection of modules or
                                    user's "default" if no name given.
                                    ===> Use "restore" instead <====
  setdefault          [name]        Save current list of modules to name if
                                    given, otherwise save as the default
                                    list for you the user.
                                    ===> Use "save" instead. <====

Miscellaneous sub-commands:
---------------------------
  is-loaded           modulefile    return a true status if module is loaded
  is-avail            modulefile    return a true status if module can be
                                    loaded
  show                modulefile    show the commands in the module file.
  use [-a]            path          Prepend or Append path to MODULEPATH.
  unuse               path          remove path from MODULEPATH.
  tablelist                         output list of active modules as a lua
                                    table.

Important Environment Variables:
--------------------------------
  LMOD_COLORIZE                     If defined to be "YES" then Lmod prints
                                    properties and warning in color.

    --------------------------------------------------------------------------

Lmod Web Sites

  Documentation:    https://lmod.readthedocs.org
  GitHub:           https://github.com/TACC/Lmod
  SourceForge:      https://lmod.sf.net
  TACC Homepage:    https://www.tacc.utexas.edu/research-development/tacc-projects/lmod

  To report a bug please read https://lmod.readthedocs.io/en/latest/075_bug_reporting.html
    --------------------------------------------------------------------------


/var/spool/slurm/slurmd/job3020911/slurm_script: line 20: source: /home/mgonggri/.conda/envs/hyperbolic: is a directory
Traceback (most recent call last):
  File "/home/mgonggri/master_thesis/train.py", line 5, in <module>
    from hesp.models.model import model_factory
  File "/gpfs/home1/mgonggri/master_thesis/hesp/models/model.py", line 3, in <module>
    from hesp.models.segmenter import Segmenter
  File "/gpfs/home1/mgonggri/master_thesis/hesp/models/segmenter.py", line 3, in <module>
    from hesp.embedding_space.hyperbolic_embedding_space import HyperbolicEmbeddingSpace
  File "/gpfs/home1/mgonggri/master_thesis/hesp/embedding_space/hyperbolic_embedding_space.py", line 5, in <module>
    from hesp.embedding_space.abstract_embedding_space import AbstractEmbeddingSpace
  File "/gpfs/home1/mgonggri/master_thesis/hesp/embedding_space/abstract_embedding_space.py", line 8, in <module>
    import geoopt
  File "/home/mgonggri/.local/lib/python3.9/site-packages/geoopt/__init__.py", line 2, in <module>
    from . import optim
  File "/home/mgonggri/.local/lib/python3.9/site-packages/geoopt/optim/__init__.py", line 5, in <module>
    from .rlinesearch import RiemannianLineSearch
  File "/home/mgonggri/.local/lib/python3.9/site-packages/geoopt/optim/rlinesearch.py", line 7, in <module>
    from scipy.optimize._linesearch import scalar_search_wolfe2, scalar_search_armijo
ModuleNotFoundError: No module named 'scipy.optimize._linesearch'
srun: error: gcn23: task 0: Exited with exit code 1
srun: launch/slurm: _step_signal: Terminating StepId=3020911.0
cp: cannot stat '/scratch-shared/mgonggri/output.txt': No such file or directory

JOB STATISTICS
==============
Job ID: 3020911
Cluster: snellius
User/Group: mgonggri/mgonggri
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 18
CPU Utilized: 00:00:03
CPU Efficiency: 1.11% of 00:04:30 core-walltime
Job Wall-clock time: 00:00:15
Memory Utilized: 1.42 MB
Memory Efficiency: 0.00% of 0.00 MB
